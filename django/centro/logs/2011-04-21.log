DEBUG:root:Logging debug facility re-started ...
DEBUG:root:Logging debug facility re-started ...
DEBUG:root:Logging debug facility re-started ...
DEBUG:root:Logging debug facility re-started ...
DEBUG:django.db.backends:(0.002) SELECT "items_item"."id", "items_item"."name", "items_item"."description", "items_item"."cost_price", "items_item"."sale_price", "items_item"."barcode", "items_item"."category_id", "items_item"."size_group_id", "items_item"."size_id", "items_item"."tax_id" FROM "items_item" LIMIT 21; args=()
DEBUG:django.db.backends:(0.000) SELECT "items_item"."category_id" FROM "items_item" LIMIT 21; args=()
DEBUG:django.db.backends:(0.000) SELECT "items_item"."id", "items_item"."name", "items_item"."description", "items_item"."cost_price", "items_item"."sale_price", "items_item"."barcode", "items_item"."category_id", "items_item"."size_group_id", "items_item"."size_id", "items_item"."tax_id" FROM "items_item" LIMIT 21; args=()
DEBUG:django.db.backends:(0.000) SELECT "items_item"."category_id" FROM "items_item" LIMIT 21; args=()
DEBUG:root:Logging debug facility re-started ...
DEBUG:root:Logging debug facility re-started ...
DEBUG:django.db.backends:(0.000) 
            SELECT name FROM sqlite_master
            WHERE type='table' AND NOT name='sqlite_sequence'
            ORDER BY name; args=()
DEBUG:django.db.backends:(0.122) CREATE TABLE "auth_permission" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(50) NOT NULL,
    "content_type_id" integer NOT NULL,
    "codename" varchar(100) NOT NULL,
    UNIQUE ("content_type_id", "codename")
)
;; args=()
DEBUG:django.db.backends:(0.092) CREATE TABLE "auth_group_permissions" (
    "id" integer NOT NULL PRIMARY KEY,
    "group_id" integer NOT NULL,
    "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id"),
    UNIQUE ("group_id", "permission_id")
)
;; args=()
DEBUG:django.db.backends:(0.084) CREATE TABLE "auth_group" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(80) NOT NULL UNIQUE
)
;; args=()
DEBUG:django.db.backends:(0.093) CREATE TABLE "auth_user_user_permissions" (
    "id" integer NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL,
    "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id"),
    UNIQUE ("user_id", "permission_id")
)
;; args=()
DEBUG:django.db.backends:(0.092) CREATE TABLE "auth_user_groups" (
    "id" integer NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL,
    "group_id" integer NOT NULL REFERENCES "auth_group" ("id"),
    UNIQUE ("user_id", "group_id")
)
;; args=()
DEBUG:django.db.backends:(0.079) CREATE TABLE "auth_user" (
    "id" integer NOT NULL PRIMARY KEY,
    "username" varchar(30) NOT NULL UNIQUE,
    "first_name" varchar(30) NOT NULL,
    "last_name" varchar(30) NOT NULL,
    "email" varchar(75) NOT NULL,
    "password" varchar(128) NOT NULL,
    "is_staff" bool NOT NULL,
    "is_active" bool NOT NULL,
    "is_superuser" bool NOT NULL,
    "last_login" datetime NOT NULL,
    "date_joined" datetime NOT NULL
)
;; args=()
DEBUG:django.db.backends:(0.105) CREATE TABLE "auth_message" (
    "id" integer NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL REFERENCES "auth_user" ("id"),
    "message" text NOT NULL
)
;; args=()
DEBUG:django.db.backends:(0.077) CREATE TABLE "django_content_type" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(100) NOT NULL,
    "app_label" varchar(100) NOT NULL,
    "model" varchar(100) NOT NULL,
    UNIQUE ("app_label", "model")
)
;; args=()
DEBUG:django.db.backends:(0.092) CREATE TABLE "django_session" (
    "session_key" varchar(40) NOT NULL PRIMARY KEY,
    "session_data" text NOT NULL,
    "expire_date" datetime NOT NULL
)
;; args=()
DEBUG:django.db.backends:(0.082) CREATE TABLE "django_site" (
    "id" integer NOT NULL PRIMARY KEY,
    "domain" varchar(100) NOT NULL,
    "name" varchar(50) NOT NULL
)
;; args=()
DEBUG:django.db.backends:(0.074) CREATE TABLE "django_admin_log" (
    "id" integer NOT NULL PRIMARY KEY,
    "action_time" datetime NOT NULL,
    "user_id" integer NOT NULL REFERENCES "auth_user" ("id"),
    "content_type_id" integer REFERENCES "django_content_type" ("id"),
    "object_id" text,
    "object_repr" varchar(200) NOT NULL,
    "action_flag" smallint unsigned NOT NULL,
    "change_message" text NOT NULL
)
;; args=()
DEBUG:django.db.backends:(0.111) CREATE TABLE "modules_moduletranslation" (
    "id" integer NOT NULL PRIMARY KEY,
    "language_code" varchar(5) NOT NULL,
    "parent_id" integer NOT NULL,
    "name" varchar(70) NOT NULL,
    "description" varchar(255),
    UNIQUE ("parent_id", "language_code")
)
;; args=()
DEBUG:django.db.backends:(0.078) CREATE TABLE "modules_module" (
    "id" integer NOT NULL PRIMARY KEY,
    "path" varchar(100) NOT NULL,
    "sort" integer,
    "parent_id" integer
)
;; args=()
DEBUG:django.db.backends:(0.098) CREATE TABLE "companies_company" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(255) NOT NULL,
    "address" varchar(255) NOT NULL,
    "email" varchar(75) NOT NULL,
    "identification" varchar(255) NOT NULL
)
;; args=()
DEBUG:django.db.backends:(0.077) CREATE TABLE "companies_store" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(255) NOT NULL,
    "address" varchar(255) NOT NULL,
    "telephone" varchar(100) NOT NULL,
    "company_id" integer NOT NULL REFERENCES "companies_company" ("id")
)
;; args=()
DEBUG:django.db.backends:(0.058) CREATE TABLE "companies_terminal" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(100) NOT NULL,
    "store_id" integer NOT NULL REFERENCES "companies_store" ("id")
)
;; args=()
DEBUG:django.db.backends:(0.084) CREATE TABLE "companies_terminal_configuration" (
    "id" integer NOT NULL PRIMARY KEY,
    "key" varchar(100) NOT NULL,
    "value" varchar(100) NOT NULL,
    "terminal_id" integer NOT NULL REFERENCES "companies_terminal" ("id")
)
;; args=()
DEBUG:django.db.backends:(0.081) CREATE TABLE "items_category" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(100) NOT NULL,
    "description" varchar(255),
    "parent_id" integer
)
;; args=()
DEBUG:django.db.backends:(0.058) CREATE TABLE "items_size_group" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(255) NOT NULL
)
;; args=()
DEBUG:django.db.backends:(0.079) CREATE TABLE "items_size" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(20) NOT NULL,
    "sort" integer NOT NULL,
    "size_group_id" integer NOT NULL REFERENCES "items_size_group" ("id")
)
;; args=()
DEBUG:django.db.backends:(0.078) CREATE TABLE "items_tax" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(100) NOT NULL,
    "percent" decimal NOT NULL,
    "locale" varchar(30) NOT NULL
)
;; args=()
DEBUG:django.db.backends:(0.105) CREATE TABLE "items_item" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(255) NOT NULL,
    "description" varchar(255),
    "cost_price" decimal NOT NULL,
    "sale_price" decimal NOT NULL,
    "barcode" varchar(100) NOT NULL UNIQUE,
    "category_id" integer NOT NULL REFERENCES "items_category" ("id"),
    "size_group_id" integer NOT NULL REFERENCES "items_size_group" ("id"),
    "size_id" integer NOT NULL REFERENCES "items_size" ("id"),
    "tax_id" integer NOT NULL REFERENCES "items_tax" ("id")
)
;; args=()
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = permission  AND "django_content_type"."app_label" = auth ); args=('permission', 'auth')
DEBUG:django.db.backends:(0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (permission, auth, permission); args=(u'permission', 'auth', 'permission')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = group  AND "django_content_type"."app_label" = auth ); args=('group', 'auth')
DEBUG:django.db.backends:(0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (group, auth, group); args=(u'group', 'auth', 'group')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = user  AND "django_content_type"."app_label" = auth ); args=('user', 'auth')
DEBUG:django.db.backends:(0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (user, auth, user); args=(u'user', 'auth', 'user')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = message  AND "django_content_type"."app_label" = auth ); args=('message', 'auth')
DEBUG:django.db.backends:(0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (message, auth, message); args=(u'message', 'auth', 'message')
DEBUG:django.db.backends:(0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1, 2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1, 2, 3, 4)
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can add permission, 1, add_permission); args=(u'Can add permission', 1, u'add_permission')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can change permission, 1, change_permission); args=(u'Can change permission', 1, u'change_permission')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can delete permission, 1, delete_permission); args=(u'Can delete permission', 1, u'delete_permission')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can add group, 2, add_group); args=(u'Can add group', 2, u'add_group')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can change group, 2, change_group); args=(u'Can change group', 2, u'change_group')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can delete group, 2, delete_group); args=(u'Can delete group', 2, u'delete_group')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can add user, 3, add_user); args=(u'Can add user', 3, u'add_user')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can change user, 3, change_user); args=(u'Can change user', 3, u'change_user')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can delete user, 3, delete_user); args=(u'Can delete user', 3, u'delete_user')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can add message, 4, add_message); args=(u'Can add message', 4, u'add_message')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can change message, 4, change_message); args=(u'Can change message', 4, u'change_message')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can delete message, 4, delete_message); args=(u'Can delete message', 4, u'delete_message')
DEBUG:root:Logging debug facility re-started ...
DEBUG:root:Logging debug facility re-started ...
DEBUG:root:Logging debug facility re-started ...
DEBUG:root:Logging debug facility re-started ...
DEBUG:root:Logging debug facility re-started ...
DEBUG:root:Logging debug facility re-started ...
DEBUG:root:Logging debug facility re-started ...
DEBUG:root:Logging debug facility re-started ...
DEBUG:django.db.backends:(0.000) 
            SELECT name FROM sqlite_master
            WHERE type='table' AND NOT name='sqlite_sequence'
            ORDER BY name; args=()
DEBUG:django.db.backends:(0.095) CREATE TABLE "auth_permission" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(50) NOT NULL,
    "content_type_id" integer NOT NULL,
    "codename" varchar(100) NOT NULL,
    UNIQUE ("content_type_id", "codename")
)
;; args=()
DEBUG:django.db.backends:(0.092) CREATE TABLE "auth_group_permissions" (
    "id" integer NOT NULL PRIMARY KEY,
    "group_id" integer NOT NULL,
    "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id"),
    UNIQUE ("group_id", "permission_id")
)
;; args=()
DEBUG:django.db.backends:(0.085) CREATE TABLE "auth_group" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(80) NOT NULL UNIQUE
)
;; args=()
DEBUG:django.db.backends:(0.066) CREATE TABLE "auth_user_user_permissions" (
    "id" integer NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL,
    "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id"),
    UNIQUE ("user_id", "permission_id")
)
;; args=()
DEBUG:django.db.backends:(0.093) CREATE TABLE "auth_user_groups" (
    "id" integer NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL,
    "group_id" integer NOT NULL REFERENCES "auth_group" ("id"),
    UNIQUE ("user_id", "group_id")
)
;; args=()
DEBUG:django.db.backends:(0.072) CREATE TABLE "auth_user" (
    "id" integer NOT NULL PRIMARY KEY,
    "username" varchar(30) NOT NULL UNIQUE,
    "first_name" varchar(30) NOT NULL,
    "last_name" varchar(30) NOT NULL,
    "email" varchar(75) NOT NULL,
    "password" varchar(128) NOT NULL,
    "is_staff" bool NOT NULL,
    "is_active" bool NOT NULL,
    "is_superuser" bool NOT NULL,
    "last_login" datetime NOT NULL,
    "date_joined" datetime NOT NULL
)
;; args=()
DEBUG:django.db.backends:(0.079) CREATE TABLE "auth_message" (
    "id" integer NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL REFERENCES "auth_user" ("id"),
    "message" text NOT NULL
)
;; args=()
DEBUG:django.db.backends:(0.070) CREATE TABLE "django_content_type" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(100) NOT NULL,
    "app_label" varchar(100) NOT NULL,
    "model" varchar(100) NOT NULL,
    UNIQUE ("app_label", "model")
)
;; args=()
DEBUG:django.db.backends:(0.081) CREATE TABLE "django_session" (
    "session_key" varchar(40) NOT NULL PRIMARY KEY,
    "session_data" text NOT NULL,
    "expire_date" datetime NOT NULL
)
;; args=()
DEBUG:django.db.backends:(0.051) CREATE TABLE "django_site" (
    "id" integer NOT NULL PRIMARY KEY,
    "domain" varchar(100) NOT NULL,
    "name" varchar(50) NOT NULL
)
;; args=()
DEBUG:django.db.backends:(0.049) CREATE TABLE "django_admin_log" (
    "id" integer NOT NULL PRIMARY KEY,
    "action_time" datetime NOT NULL,
    "user_id" integer NOT NULL REFERENCES "auth_user" ("id"),
    "content_type_id" integer REFERENCES "django_content_type" ("id"),
    "object_id" text,
    "object_repr" varchar(200) NOT NULL,
    "action_flag" smallint unsigned NOT NULL,
    "change_message" text NOT NULL
)
;; args=()
DEBUG:django.db.backends:(0.142) CREATE TABLE "modules_moduletranslation" (
    "id" integer NOT NULL PRIMARY KEY,
    "language_code" varchar(5) NOT NULL,
    "parent_id" integer NOT NULL,
    "name" varchar(70) NOT NULL,
    "description" varchar(255),
    UNIQUE ("parent_id", "language_code")
)
;; args=()
DEBUG:django.db.backends:(0.090) CREATE TABLE "modules_module" (
    "id" integer NOT NULL PRIMARY KEY,
    "path" varchar(100) NOT NULL,
    "sort" integer,
    "parent_id" integer
)
;; args=()
DEBUG:django.db.backends:(0.079) CREATE TABLE "companies_company" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(255) NOT NULL,
    "address" varchar(255) NOT NULL,
    "email" varchar(75) NOT NULL,
    "identification" varchar(255) NOT NULL
)
;; args=()
DEBUG:django.db.backends:(0.095) CREATE TABLE "companies_store" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(255) NOT NULL,
    "address" varchar(255) NOT NULL,
    "telephone" varchar(100) NOT NULL,
    "company_id" integer NOT NULL REFERENCES "companies_company" ("id")
)
;; args=()
DEBUG:django.db.backends:(0.057) CREATE TABLE "companies_terminal" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(100) NOT NULL,
    "store_id" integer NOT NULL REFERENCES "companies_store" ("id")
)
;; args=()
DEBUG:django.db.backends:(0.074) CREATE TABLE "companies_terminal_configuration" (
    "id" integer NOT NULL PRIMARY KEY,
    "key" varchar(100) NOT NULL,
    "value" varchar(100) NOT NULL,
    "terminal_id" integer NOT NULL REFERENCES "companies_terminal" ("id")
)
;; args=()
DEBUG:django.db.backends:(0.075) CREATE TABLE "items_category" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(100) NOT NULL,
    "description" varchar(255),
    "parent_id" integer
)
;; args=()
DEBUG:django.db.backends:(0.049) CREATE TABLE "items_size_group" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(255) NOT NULL
)
;; args=()
DEBUG:django.db.backends:(0.078) CREATE TABLE "items_size" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(20) NOT NULL,
    "sort" integer NOT NULL,
    "size_group_id" integer NOT NULL REFERENCES "items_size_group" ("id")
)
;; args=()
DEBUG:django.db.backends:(0.071) CREATE TABLE "items_tax" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(100) NOT NULL,
    "percent" decimal NOT NULL,
    "locale" varchar(30) NOT NULL
)
;; args=()
DEBUG:django.db.backends:(0.079) CREATE TABLE "items_item" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(255) NOT NULL,
    "description" varchar(255),
    "cost_price" decimal NOT NULL,
    "sale_price" decimal NOT NULL,
    "barcode" varchar(100) NOT NULL UNIQUE,
    "category_id" integer NOT NULL REFERENCES "items_category" ("id"),
    "size_group_id" integer NOT NULL REFERENCES "items_size_group" ("id"),
    "size_id" integer NOT NULL REFERENCES "items_size" ("id"),
    "tax_id" integer NOT NULL REFERENCES "items_tax" ("id")
)
;; args=()
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = permission  AND "django_content_type"."app_label" = auth ); args=('permission', 'auth')
DEBUG:django.db.backends:(0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (permission, auth, permission); args=(u'permission', 'auth', 'permission')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = group  AND "django_content_type"."app_label" = auth ); args=('group', 'auth')
DEBUG:django.db.backends:(0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (group, auth, group); args=(u'group', 'auth', 'group')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = user  AND "django_content_type"."app_label" = auth ); args=('user', 'auth')
DEBUG:django.db.backends:(0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (user, auth, user); args=(u'user', 'auth', 'user')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = message  AND "django_content_type"."app_label" = auth ); args=('message', 'auth')
DEBUG:django.db.backends:(0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (message, auth, message); args=(u'message', 'auth', 'message')
DEBUG:django.db.backends:(0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1, 2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1, 2, 3, 4)
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can add permission, 1, add_permission); args=(u'Can add permission', 1, u'add_permission')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can change permission, 1, change_permission); args=(u'Can change permission', 1, u'change_permission')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can delete permission, 1, delete_permission); args=(u'Can delete permission', 1, u'delete_permission')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can add group, 2, add_group); args=(u'Can add group', 2, u'add_group')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can change group, 2, change_group); args=(u'Can change group', 2, u'change_group')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can delete group, 2, delete_group); args=(u'Can delete group', 2, u'delete_group')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can add user, 3, add_user); args=(u'Can add user', 3, u'add_user')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can change user, 3, change_user); args=(u'Can change user', 3, u'change_user')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can delete user, 3, delete_user); args=(u'Can delete user', 3, u'delete_user')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can add message, 4, add_message); args=(u'Can add message', 4, u'add_message')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can change message, 4, change_message); args=(u'Can change message', 4, u'change_message')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can delete message, 4, delete_message); args=(u'Can delete message', 4, u'delete_message')
DEBUG:root:Logging debug facility re-started ...
DEBUG:root:Logging debug facility re-started ...
DEBUG:root:Logging debug facility re-started ...
DEBUG:root:Logging debug facility re-started ...
DEBUG:root:Logging debug facility re-started ...
DEBUG:root:Logging debug facility re-started ...
DEBUG:root:Logging debug facility re-started ...
DEBUG:root:Logging debug facility re-started ...
DEBUG:django.db.backends:(0.000) 
            SELECT name FROM sqlite_master
            WHERE type='table' AND NOT name='sqlite_sequence'
            ORDER BY name; args=()
DEBUG:django.db.backends:(0.145) CREATE TABLE "auth_permission" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(50) NOT NULL,
    "content_type_id" integer NOT NULL,
    "codename" varchar(100) NOT NULL,
    UNIQUE ("content_type_id", "codename")
)
;; args=()
DEBUG:django.db.backends:(0.109) CREATE TABLE "auth_group_permissions" (
    "id" integer NOT NULL PRIMARY KEY,
    "group_id" integer NOT NULL,
    "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id"),
    UNIQUE ("group_id", "permission_id")
)
;; args=()
DEBUG:django.db.backends:(0.093) CREATE TABLE "auth_group" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(80) NOT NULL UNIQUE
)
;; args=()
DEBUG:django.db.backends:(0.067) CREATE TABLE "auth_user_user_permissions" (
    "id" integer NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL,
    "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id"),
    UNIQUE ("user_id", "permission_id")
)
;; args=()
DEBUG:django.db.backends:(0.109) CREATE TABLE "auth_user_groups" (
    "id" integer NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL,
    "group_id" integer NOT NULL REFERENCES "auth_group" ("id"),
    UNIQUE ("user_id", "group_id")
)
;; args=()
DEBUG:django.db.backends:(0.072) CREATE TABLE "auth_user" (
    "id" integer NOT NULL PRIMARY KEY,
    "username" varchar(30) NOT NULL UNIQUE,
    "first_name" varchar(30) NOT NULL,
    "last_name" varchar(30) NOT NULL,
    "email" varchar(75) NOT NULL,
    "password" varchar(128) NOT NULL,
    "is_staff" bool NOT NULL,
    "is_active" bool NOT NULL,
    "is_superuser" bool NOT NULL,
    "last_login" datetime NOT NULL,
    "date_joined" datetime NOT NULL
)
;; args=()
DEBUG:django.db.backends:(0.079) CREATE TABLE "auth_message" (
    "id" integer NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL REFERENCES "auth_user" ("id"),
    "message" text NOT NULL
)
;; args=()
DEBUG:django.db.backends:(0.087) CREATE TABLE "django_content_type" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(100) NOT NULL,
    "app_label" varchar(100) NOT NULL,
    "model" varchar(100) NOT NULL,
    UNIQUE ("app_label", "model")
)
;; args=()
DEBUG:django.db.backends:(0.074) CREATE TABLE "django_session" (
    "session_key" varchar(40) NOT NULL PRIMARY KEY,
    "session_data" text NOT NULL,
    "expire_date" datetime NOT NULL
)
;; args=()
DEBUG:django.db.backends:(0.075) CREATE TABLE "django_site" (
    "id" integer NOT NULL PRIMARY KEY,
    "domain" varchar(100) NOT NULL,
    "name" varchar(50) NOT NULL
)
;; args=()
DEBUG:django.db.backends:(0.049) CREATE TABLE "django_admin_log" (
    "id" integer NOT NULL PRIMARY KEY,
    "action_time" datetime NOT NULL,
    "user_id" integer NOT NULL REFERENCES "auth_user" ("id"),
    "content_type_id" integer REFERENCES "django_content_type" ("id"),
    "object_id" text,
    "object_repr" varchar(200) NOT NULL,
    "action_flag" smallint unsigned NOT NULL,
    "change_message" text NOT NULL
)
;; args=()
DEBUG:django.db.backends:(0.077) CREATE TABLE "modules_moduletranslation" (
    "id" integer NOT NULL PRIMARY KEY,
    "language_code" varchar(5) NOT NULL,
    "parent_id" integer NOT NULL,
    "name" varchar(70) NOT NULL,
    "description" varchar(255),
    UNIQUE ("parent_id", "language_code")
)
;; args=()
DEBUG:django.db.backends:(0.072) CREATE TABLE "modules_module" (
    "id" integer NOT NULL PRIMARY KEY,
    "path" varchar(100) NOT NULL,
    "sort" integer,
    "parent_id" integer
)
;; args=()
DEBUG:django.db.backends:(0.079) CREATE TABLE "companies_company" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(255) NOT NULL,
    "address" varchar(255) NOT NULL,
    "email" varchar(75) NOT NULL,
    "identification" varchar(255) NOT NULL
)
;; args=()
DEBUG:django.db.backends:(0.078) CREATE TABLE "companies_store" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(255) NOT NULL,
    "address" varchar(255) NOT NULL,
    "telephone" varchar(100) NOT NULL,
    "company_id" integer NOT NULL REFERENCES "companies_company" ("id")
)
;; args=()
DEBUG:django.db.backends:(0.049) CREATE TABLE "companies_terminal" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(100) NOT NULL,
    "store_id" integer NOT NULL REFERENCES "companies_store" ("id")
)
;; args=()
DEBUG:django.db.backends:(0.076) CREATE TABLE "companies_terminal_configuration" (
    "id" integer NOT NULL PRIMARY KEY,
    "key" varchar(100) NOT NULL,
    "value" varchar(100) NOT NULL,
    "terminal_id" integer NOT NULL REFERENCES "companies_terminal" ("id")
)
;; args=()
DEBUG:django.db.backends:(0.072) CREATE TABLE "items_category" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(100) NOT NULL,
    "description" varchar(255),
    "parent_id" integer
)
;; args=()
DEBUG:django.db.backends:(0.058) CREATE TABLE "items_size_group" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(255) NOT NULL
)
;; args=()
DEBUG:django.db.backends:(0.079) CREATE TABLE "items_size" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(20) NOT NULL,
    "sort" integer NOT NULL,
    "size_group_id" integer NOT NULL REFERENCES "items_size_group" ("id")
)
;; args=()
DEBUG:django.db.backends:(0.086) CREATE TABLE "items_tax" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(100) NOT NULL,
    "percent" decimal NOT NULL,
    "locale" varchar(30) NOT NULL
)
;; args=()
DEBUG:django.db.backends:(0.090) CREATE TABLE "items_item" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(255) NOT NULL,
    "description" varchar(255),
    "cost_price" decimal NOT NULL,
    "sale_price" decimal NOT NULL,
    "barcode" varchar(100) NOT NULL UNIQUE,
    "category_id" integer NOT NULL REFERENCES "items_category" ("id"),
    "size_group_id" integer NOT NULL REFERENCES "items_size_group" ("id"),
    "size_id" integer NOT NULL REFERENCES "items_size" ("id"),
    "tax_id" integer NOT NULL REFERENCES "items_tax" ("id")
)
;; args=()
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = permission  AND "django_content_type"."app_label" = auth ); args=('permission', 'auth')
DEBUG:django.db.backends:(0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (permission, auth, permission); args=(u'permission', 'auth', 'permission')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = group  AND "django_content_type"."app_label" = auth ); args=('group', 'auth')
DEBUG:django.db.backends:(0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (group, auth, group); args=(u'group', 'auth', 'group')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = user  AND "django_content_type"."app_label" = auth ); args=('user', 'auth')
DEBUG:django.db.backends:(0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (user, auth, user); args=(u'user', 'auth', 'user')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = message  AND "django_content_type"."app_label" = auth ); args=('message', 'auth')
DEBUG:django.db.backends:(0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (message, auth, message); args=(u'message', 'auth', 'message')
DEBUG:django.db.backends:(0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1, 2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1, 2, 3, 4)
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can add permission, 1, add_permission); args=(u'Can add permission', 1, u'add_permission')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can change permission, 1, change_permission); args=(u'Can change permission', 1, u'change_permission')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can delete permission, 1, delete_permission); args=(u'Can delete permission', 1, u'delete_permission')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can add group, 2, add_group); args=(u'Can add group', 2, u'add_group')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can change group, 2, change_group); args=(u'Can change group', 2, u'change_group')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can delete group, 2, delete_group); args=(u'Can delete group', 2, u'delete_group')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can add user, 3, add_user); args=(u'Can add user', 3, u'add_user')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can change user, 3, change_user); args=(u'Can change user', 3, u'change_user')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can delete user, 3, delete_user); args=(u'Can delete user', 3, u'delete_user')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can add message, 4, add_message); args=(u'Can add message', 4, u'add_message')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can change message, 4, change_message); args=(u'Can change message', 4, u'change_message')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can delete message, 4, delete_message); args=(u'Can delete message', 4, u'delete_message')
DEBUG:django.db.backends:(0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = luka ; args=('luka',)
DEBUG:django.db.backends:(0.000) SELECT "auth_user"."id", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."password", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."is_superuser", "auth_user"."last_login", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = root ; args=('root',)
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_user" ("username", "first_name", "last_name", "email", "password", "is_staff", "is_active", "is_superuser", "last_login", "date_joined") VALUES (root, , , root@localhost.net, sha1$33e07$30a80009b3219d1a9432f7e77f7030d12f986631, False, True, False, 2011-04-21 10:28:26.079775, 2011-04-21 10:28:26.079775); args=('root', '', '', 'root@localhost.net', 'sha1$33e07$30a80009b3219d1a9432f7e77f7030d12f986631', False, True, False, u'2011-04-21 10:28:26.079775', u'2011-04-21 10:28:26.079775')
DEBUG:django.db.backends:(0.000) SELECT (1) AS "a" FROM "auth_user" WHERE "auth_user"."id" = 1  LIMIT 1; args=(1,)
DEBUG:django.db.backends:(0.000) UPDATE "auth_user" SET "username" = root, "first_name" = , "last_name" = , "email" = root@localhost.net, "password" = sha1$33e07$30a80009b3219d1a9432f7e77f7030d12f986631, "is_staff" = True, "is_active" = True, "is_superuser" = True, "last_login" = 2011-04-21 10:28:26.079775, "date_joined" = 2011-04-21 10:28:26.079775 WHERE "auth_user"."id" = 1 ; args=('root', '', '', 'root@localhost.net', 'sha1$33e07$30a80009b3219d1a9432f7e77f7030d12f986631', True, True, True, u'2011-04-21 10:28:26.079775', u'2011-04-21 10:28:26.079775', 1)
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = auth  ORDER BY "django_content_type"."name" ASC; args=('auth',)
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = permission  AND "django_content_type"."app_label" = auth ); args=('permission', 'auth')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = group  AND "django_content_type"."app_label" = auth ); args=('group', 'auth')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = user  AND "django_content_type"."app_label" = auth ); args=('user', 'auth')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = message  AND "django_content_type"."app_label" = auth ); args=('message', 'auth')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = contenttype  AND "django_content_type"."app_label" = contenttypes ); args=('contenttype', 'contenttypes')
DEBUG:django.db.backends:(0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (content type, contenttypes, contenttype); args=(u'content type', 'contenttypes', 'contenttype')
DEBUG:django.db.backends:(0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,)
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can add content type, 5, add_contenttype); args=(u'Can add content type', 5, u'add_contenttype')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can change content type, 5, change_contenttype); args=(u'Can change content type', 5, u'change_contenttype')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can delete content type, 5, delete_contenttype); args=(u'Can delete content type', 5, u'delete_contenttype')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = contenttypes  ORDER BY "django_content_type"."name" ASC; args=('contenttypes',)
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = contenttype  AND "django_content_type"."app_label" = contenttypes ); args=('contenttype', 'contenttypes')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = session  AND "django_content_type"."app_label" = sessions ); args=('session', 'sessions')
DEBUG:django.db.backends:(0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (session, sessions, session); args=(u'session', 'sessions', 'session')
DEBUG:django.db.backends:(0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,)
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can add session, 6, add_session); args=(u'Can add session', 6, u'add_session')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can change session, 6, change_session); args=(u'Can change session', 6, u'change_session')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can delete session, 6, delete_session); args=(u'Can delete session', 6, u'delete_session')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = sessions  ORDER BY "django_content_type"."name" ASC; args=('sessions',)
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = session  AND "django_content_type"."app_label" = sessions ); args=('session', 'sessions')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = site  AND "django_content_type"."app_label" = sites ); args=('site', 'sites')
DEBUG:django.db.backends:(0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (site, sites, site); args=(u'site', 'sites', 'site')
DEBUG:django.db.backends:(0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(7,)
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can add site, 7, add_site); args=(u'Can add site', 7, u'add_site')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can change site, 7, change_site); args=(u'Can change site', 7, u'change_site')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can delete site, 7, delete_site); args=(u'Can delete site', 7, u'delete_site')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = sites  ORDER BY "django_content_type"."name" ASC; args=('sites',)
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = site  AND "django_content_type"."app_label" = sites ); args=('site', 'sites')
DEBUG:django.db.backends:(0.000) INSERT INTO "django_site" ("domain", "name") VALUES (example.com, example.com); args=('example.com', 'example.com')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = messages  ORDER BY "django_content_type"."name" ASC; args=('messages',)
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = logentry  AND "django_content_type"."app_label" = admin ); args=('logentry', 'admin')
DEBUG:django.db.backends:(0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (log entry, admin, logentry); args=(u'log entry', 'admin', 'logentry')
DEBUG:django.db.backends:(0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8,)
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can add log entry, 8, add_logentry); args=(u'Can add log entry', 8, u'add_logentry')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can change log entry, 8, change_logentry); args=(u'Can change log entry', 8, u'change_logentry')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can delete log entry, 8, delete_logentry); args=(u'Can delete log entry', 8, u'delete_logentry')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = admin  ORDER BY "django_content_type"."name" ASC; args=('admin',)
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = logentry  AND "django_content_type"."app_label" = admin ); args=('logentry', 'admin')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = multilingual_model  ORDER BY "django_content_type"."name" ASC; args=('multilingual_model',)
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = moduletranslation  AND "django_content_type"."app_label" = modules ); args=('moduletranslation', 'modules')
DEBUG:django.db.backends:(0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (module translation, modules, moduletranslation); args=(u'module translation', 'modules', 'moduletranslation')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = module  AND "django_content_type"."app_label" = modules ); args=('module', 'modules')
DEBUG:django.db.backends:(0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (module, modules, module); args=(u'module', 'modules', 'module')
DEBUG:django.db.backends:(0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (9, 10) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(9, 10)
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can add module translation, 9, add_moduletranslation); args=(u'Can add module translation', 9, u'add_moduletranslation')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can change module translation, 9, change_moduletranslation); args=(u'Can change module translation', 9, u'change_moduletranslation')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can delete module translation, 9, delete_moduletranslation); args=(u'Can delete module translation', 9, u'delete_moduletranslation')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can add module, 10, add_module); args=(u'Can add module', 10, u'add_module')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can change module, 10, change_module); args=(u'Can change module', 10, u'change_module')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can delete module, 10, delete_module); args=(u'Can delete module', 10, u'delete_module')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = modules  ORDER BY "django_content_type"."name" ASC; args=('modules',)
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = moduletranslation  AND "django_content_type"."app_label" = modules ); args=('moduletranslation', 'modules')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = module  AND "django_content_type"."app_label" = modules ); args=('module', 'modules')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = company  AND "django_content_type"."app_label" = companies ); args=('company', 'companies')
DEBUG:django.db.backends:(0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (company, companies, company); args=(u'company', 'companies', 'company')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = store  AND "django_content_type"."app_label" = companies ); args=('store', 'companies')
DEBUG:django.db.backends:(0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (store, companies, store); args=(u'store', 'companies', 'store')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = terminal  AND "django_content_type"."app_label" = companies ); args=('terminal', 'companies')
DEBUG:django.db.backends:(0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (terminal, companies, terminal); args=(u'terminal', 'companies', 'terminal')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = terminal_configuration  AND "django_content_type"."app_label" = companies ); args=('terminal_configuration', 'companies')
DEBUG:django.db.backends:(0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (terminal configuration, companies, terminal_configuration); args=(u'terminal configuration', 'companies', 'terminal_configuration')
DEBUG:django.db.backends:(0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (11, 12, 13, 14) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(11, 12, 13, 14)
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can add company, 11, add_company); args=(u'Can add company', 11, u'add_company')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can change company, 11, change_company); args=(u'Can change company', 11, u'change_company')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can delete company, 11, delete_company); args=(u'Can delete company', 11, u'delete_company')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can add store, 12, add_store); args=(u'Can add store', 12, u'add_store')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can change store, 12, change_store); args=(u'Can change store', 12, u'change_store')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can delete store, 12, delete_store); args=(u'Can delete store', 12, u'delete_store')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can add terminal, 13, add_terminal); args=(u'Can add terminal', 13, u'add_terminal')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can change terminal, 13, change_terminal); args=(u'Can change terminal', 13, u'change_terminal')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can delete terminal, 13, delete_terminal); args=(u'Can delete terminal', 13, u'delete_terminal')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can add terminal configuration, 14, add_terminal_configuration); args=(u'Can add terminal configuration', 14, u'add_terminal_configuration')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can change terminal configuration, 14, change_terminal_configuration); args=(u'Can change terminal configuration', 14, u'change_terminal_configuration')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can delete terminal configuration, 14, delete_terminal_configuration); args=(u'Can delete terminal configuration', 14, u'delete_terminal_configuration')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = companies  ORDER BY "django_content_type"."name" ASC; args=('companies',)
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = company  AND "django_content_type"."app_label" = companies ); args=('company', 'companies')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = store  AND "django_content_type"."app_label" = companies ); args=('store', 'companies')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = terminal  AND "django_content_type"."app_label" = companies ); args=('terminal', 'companies')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = terminal_configuration  AND "django_content_type"."app_label" = companies ); args=('terminal_configuration', 'companies')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = category  AND "django_content_type"."app_label" = items ); args=('category', 'items')
DEBUG:django.db.backends:(0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (category, items, category); args=(u'category', 'items', 'category')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = size_group  AND "django_content_type"."app_label" = items ); args=('size_group', 'items')
DEBUG:django.db.backends:(0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (size group, items, size_group); args=(u'size group', 'items', 'size_group')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = size  AND "django_content_type"."app_label" = items ); args=('size', 'items')
DEBUG:django.db.backends:(0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (size, items, size); args=(u'size', 'items', 'size')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = tax  AND "django_content_type"."app_label" = items ); args=('tax', 'items')
DEBUG:django.db.backends:(0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (tax, items, tax); args=(u'tax', 'items', 'tax')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = item  AND "django_content_type"."app_label" = items ); args=('item', 'items')
DEBUG:django.db.backends:(0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (item, items, item); args=(u'item', 'items', 'item')
DEBUG:django.db.backends:(0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (16, 17, 18, 19, 15) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(16, 17, 18, 19, 15)
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can add category, 15, add_category); args=(u'Can add category', 15, u'add_category')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can change category, 15, change_category); args=(u'Can change category', 15, u'change_category')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can delete category, 15, delete_category); args=(u'Can delete category', 15, u'delete_category')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can add size group, 16, add_size_group); args=(u'Can add size group', 16, u'add_size_group')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can change size group, 16, change_size_group); args=(u'Can change size group', 16, u'change_size_group')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can delete size group, 16, delete_size_group); args=(u'Can delete size group', 16, u'delete_size_group')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can add size, 17, add_size); args=(u'Can add size', 17, u'add_size')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can change size, 17, change_size); args=(u'Can change size', 17, u'change_size')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can delete size, 17, delete_size); args=(u'Can delete size', 17, u'delete_size')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can add tax, 18, add_tax); args=(u'Can add tax', 18, u'add_tax')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can change tax, 18, change_tax); args=(u'Can change tax', 18, u'change_tax')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can delete tax, 18, delete_tax); args=(u'Can delete tax', 18, u'delete_tax')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can add item, 19, add_item); args=(u'Can add item', 19, u'add_item')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can change item, 19, change_item); args=(u'Can change item', 19, u'change_item')
DEBUG:django.db.backends:(0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES (Can delete item, 19, delete_item); args=(u'Can delete item', 19, u'delete_item')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = items  ORDER BY "django_content_type"."name" ASC; args=('items',)
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = category  AND "django_content_type"."app_label" = items ); args=('category', 'items')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = size_group  AND "django_content_type"."app_label" = items ); args=('size_group', 'items')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = size  AND "django_content_type"."app_label" = items ); args=('size', 'items')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = tax  AND "django_content_type"."app_label" = items ); args=('tax', 'items')
DEBUG:django.db.backends:(0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = item  AND "django_content_type"."app_label" = items ); args=('item', 'items')
DEBUG:django.db.backends:(0.076) CREATE INDEX "auth_permission_e4470c6e" ON "auth_permission" ("content_type_id");; args=()
DEBUG:django.db.backends:(0.091) CREATE INDEX "auth_group_permissions_bda51c3c" ON "auth_group_permissions" ("group_id");; args=()
DEBUG:django.db.backends:(0.123) CREATE INDEX "auth_group_permissions_1e014c8f" ON "auth_group_permissions" ("permission_id");; args=()
DEBUG:django.db.backends:(0.086) CREATE INDEX "auth_user_user_permissions_fbfc09f1" ON "auth_user_user_permissions" ("user_id");; args=()
DEBUG:django.db.backends:(0.058) CREATE INDEX "auth_user_user_permissions_1e014c8f" ON "auth_user_user_permissions" ("permission_id");; args=()
DEBUG:django.db.backends:(0.076) CREATE INDEX "auth_user_groups_fbfc09f1" ON "auth_user_groups" ("user_id");; args=()
DEBUG:django.db.backends:(0.090) CREATE INDEX "auth_user_groups_bda51c3c" ON "auth_user_groups" ("group_id");; args=()
DEBUG:django.db.backends:(0.066) CREATE INDEX "auth_message_fbfc09f1" ON "auth_message" ("user_id");; args=()
DEBUG:django.db.backends:(0.104) CREATE INDEX "django_session_c25c2c28" ON "django_session" ("expire_date");; args=()
DEBUG:django.db.backends:(0.070) CREATE INDEX "django_admin_log_fbfc09f1" ON "django_admin_log" ("user_id");; args=()
DEBUG:django.db.backends:(0.058) CREATE INDEX "django_admin_log_e4470c6e" ON "django_admin_log" ("content_type_id");; args=()
DEBUG:django.db.backends:(0.058) CREATE INDEX "modules_moduletranslation_63f17a16" ON "modules_moduletranslation" ("parent_id");; args=()
DEBUG:django.db.backends:(0.092) CREATE INDEX "modules_module_63f17a16" ON "modules_module" ("parent_id");; args=()
DEBUG:django.db.backends:(0.074) CREATE INDEX "companies_store_543518c6" ON "companies_store" ("company_id");; args=()
DEBUG:django.db.backends:(0.058) CREATE INDEX "companies_terminal_b8866dce" ON "companies_terminal" ("store_id");; args=()
DEBUG:django.db.backends:(0.120) CREATE INDEX "companies_terminal_configuration_39dd71ec" ON "companies_terminal_configuration" ("terminal_id");; args=()
DEBUG:django.db.backends:(0.093) CREATE INDEX "items_category_63f17a16" ON "items_category" ("parent_id");; args=()
DEBUG:django.db.backends:(0.069) CREATE INDEX "items_size_c88f5751" ON "items_size" ("size_group_id");; args=()
DEBUG:django.db.backends:(0.074) CREATE INDEX "items_item_42dc49bc" ON "items_item" ("category_id");; args=()
DEBUG:django.db.backends:(0.090) CREATE INDEX "items_item_c88f5751" ON "items_item" ("size_group_id");; args=()
DEBUG:django.db.backends:(0.090) CREATE INDEX "items_item_6154b20f" ON "items_item" ("size_id");; args=()
DEBUG:django.db.backends:(0.069) CREATE INDEX "items_item_d50f6730" ON "items_item" ("tax_id");; args=()
DEBUG:django.db.backends:(0.000) SELECT (1) AS "a" FROM "modules_module" WHERE "modules_module"."id" = 1  LIMIT 1; args=(1,)
DEBUG:django.db.backends:(0.000) INSERT INTO "modules_module" ("id", "path", "sort", "parent_id") VALUES (1, /companies, 70, None); args=(1, u'/companies', 70, None)
DEBUG:django.db.backends:(0.000) SELECT (1) AS "a" FROM "modules_moduletranslation" WHERE "modules_moduletranslation"."id" = 10  LIMIT 1; args=(10,)
DEBUG:django.db.backends:(0.000) INSERT INTO "modules_moduletranslation" ("id", "language_code", "parent_id", "name", "description") VALUES (10, en, 1, System settings, Change system settings for the application); args=(10, u'en', 1, u'System settings', u'Change system settings for the application')
DEBUG:django.db.backends:(0.000) SELECT (1) AS "a" FROM "modules_moduletranslation" WHERE "modules_moduletranslation"."id" = 11  LIMIT 1; args=(11,)
DEBUG:django.db.backends:(0.000) INSERT INTO "modules_moduletranslation" ("id", "language_code", "parent_id", "name", "description") VALUES (11, si, 1, Nastavitve sistema, Sprememba nastavitev aplikacije); args=(11, u'si', 1, u'Nastavitve sistema', u'Sprememba nastavitev aplikacije')
DEBUG:django.db.backends:(0.000) SELECT (1) AS "a" FROM "modules_module" WHERE "modules_module"."id" = 2  LIMIT 1; args=(2,)
DEBUG:django.db.backends:(0.000) INSERT INTO "modules_module" ("id", "path", "sort", "parent_id") VALUES (2, #, 40, None); args=(2, u'#', 40, None)
DEBUG:django.db.backends:(0.000) SELECT (1) AS "a" FROM "modules_moduletranslation" WHERE "modules_moduletranslation"."id" = 20  LIMIT 1; args=(20,)
DEBUG:django.db.backends:(0.000) INSERT INTO "modules_moduletranslation" ("id", "language_code", "parent_id", "name", "description") VALUES (20, en, 2, Customers, Change the customers database); args=(20, u'en', 2, u'Customers', u'Change the customers database')
DEBUG:django.db.backends:(0.000) SELECT (1) AS "a" FROM "modules_moduletranslation" WHERE "modules_moduletranslation"."id" = 21  LIMIT 1; args=(21,)
DEBUG:django.db.backends:(0.000) INSERT INTO "modules_moduletranslation" ("id", "language_code", "parent_id", "name", "description") VALUES (21, si, 2, Stranke, Urejanje šifranta strank); args=(21, u'si', 2, u'Stranke', u'Urejanje \u0161ifranta strank')
DEBUG:django.db.backends:(0.000) SELECT (1) AS "a" FROM "modules_module" WHERE "modules_module"."id" = 3  LIMIT 1; args=(3,)
DEBUG:django.db.backends:(0.000) INSERT INTO "modules_module" ("id", "path", "sort", "parent_id") VALUES (3, #, 50, None); args=(3, u'#', 50, None)
DEBUG:django.db.backends:(0.000) SELECT (1) AS "a" FROM "modules_moduletranslation" WHERE "modules_moduletranslation"."id" = 30  LIMIT 1; args=(30,)
DEBUG:django.db.backends:(0.000) INSERT INTO "modules_moduletranslation" ("id", "language_code", "parent_id", "name", "description") VALUES (30, en, 3, Employees, Change the employees database); args=(30, u'en', 3, u'Employees', u'Change the employees database')
DEBUG:django.db.backends:(0.000) SELECT (1) AS "a" FROM "modules_moduletranslation" WHERE "modules_moduletranslation"."id" = 31  LIMIT 1; args=(31,)
DEBUG:django.db.backends:(0.000) INSERT INTO "modules_moduletranslation" ("id", "language_code", "parent_id", "name", "description") VALUES (31, si, 3, Osebje, Urejanje šifranta osebja); args=(31, u'si', 3, u'Osebje', u'Urejanje \u0161ifranta osebja')
DEBUG:django.db.backends:(0.000) SELECT (1) AS "a" FROM "modules_module" WHERE "modules_module"."id" = 4  LIMIT 1; args=(4,)
DEBUG:django.db.backends:(0.000) INSERT INTO "modules_module" ("id", "path", "sort", "parent_id") VALUES (4, /items, 30, None); args=(4, u'/items', 30, None)
DEBUG:django.db.backends:(0.000) SELECT (1) AS "a" FROM "modules_moduletranslation" WHERE "modules_moduletranslation"."id" = 40  LIMIT 1; args=(40,)
DEBUG:django.db.backends:(0.000) INSERT INTO "modules_moduletranslation" ("id", "language_code", "parent_id", "name", "description") VALUES (40, en, 4, Items, Change the items database); args=(40, u'en', 4, u'Items', u'Change the items database')
DEBUG:django.db.backends:(0.000) SELECT (1) AS "a" FROM "modules_moduletranslation" WHERE "modules_moduletranslation"."id" = 41  LIMIT 1; args=(41,)
DEBUG:django.db.backends:(0.000) INSERT INTO "modules_moduletranslation" ("id", "language_code", "parent_id", "name", "description") VALUES (41, si, 4, Artikli, Urejanje šifranta artiklov); args=(41, u'si', 4, u'Artikli', u'Urejanje \u0161ifranta artiklov')
DEBUG:django.db.backends:(0.000) SELECT (1) AS "a" FROM "modules_module" WHERE "modules_module"."id" = 40  LIMIT 1; args=(40,)
DEBUG:django.db.backends:(0.000) INSERT INTO "modules_module" ("id", "path", "sort", "parent_id") VALUES (40, /items, 20, 4); args=(40, u'/items', 20, 4)
DEBUG:django.db.backends:(0.000) SELECT (1) AS "a" FROM "modules_moduletranslation" WHERE "modules_moduletranslation"."id" = 400  LIMIT 1; args=(400,)
DEBUG:django.db.backends:(0.000) INSERT INTO "modules_moduletranslation" ("id", "language_code", "parent_id", "name", "description") VALUES (400, en, 40, Items, Change the items database); args=(400, u'en', 40, u'Items', u'Change the items database')
DEBUG:django.db.backends:(0.000) SELECT (1) AS "a" FROM "modules_moduletranslation" WHERE "modules_moduletranslation"."id" = 401  LIMIT 1; args=(401,)
DEBUG:django.db.backends:(0.000) INSERT INTO "modules_moduletranslation" ("id", "language_code", "parent_id", "name", "description") VALUES (401, si, 40, Artikli, Urejanje šifranta artiklov); args=(401, u'si', 40, u'Artikli', u'Urejanje \u0161ifranta artiklov')
DEBUG:django.db.backends:(0.000) SELECT (1) AS "a" FROM "modules_module" WHERE "modules_module"."id" = 41  LIMIT 1; args=(41,)
DEBUG:django.db.backends:(0.000) INSERT INTO "modules_module" ("id", "path", "sort", "parent_id") VALUES (41, /items/categories, 10, 4); args=(41, u'/items/categories', 10, 4)
DEBUG:django.db.backends:(0.000) SELECT (1) AS "a" FROM "modules_moduletranslation" WHERE "modules_moduletranslation"."id" = 410  LIMIT 1; args=(410,)
DEBUG:django.db.backends:(0.000) INSERT INTO "modules_moduletranslation" ("id", "language_code", "parent_id", "name", "description") VALUES (410, en, 41, Categories, Change categories into which items are arranged); args=(410, u'en', 41, u'Categories', u'Change categories into which items are arranged')
DEBUG:django.db.backends:(0.000) SELECT (1) AS "a" FROM "modules_moduletranslation" WHERE "modules_moduletranslation"."id" = 411  LIMIT 1; args=(411,)
DEBUG:django.db.backends:(0.000) INSERT INTO "modules_moduletranslation" ("id", "language_code", "parent_id", "name", "description") VALUES (411, si, 41, Kategorije, Urejanje kategorij, v katere so artikli razporejeni); args=(411, u'si', 41, u'Kategorije', u'Urejanje kategorij, v katere so artikli razporejeni')
DEBUG:django.db.backends:(0.000) SELECT (1) AS "a" FROM "modules_module" WHERE "modules_module"."id" = 44  LIMIT 1; args=(44,)
DEBUG:django.db.backends:(0.000) INSERT INTO "modules_module" ("id", "path", "sort", "parent_id") VALUES (44, /items/sizes, 30, 4); args=(44, u'/items/sizes', 30, 4)
DEBUG:django.db.backends:(0.000) SELECT (1) AS "a" FROM "modules_moduletranslation" WHERE "modules_moduletranslation"."id" = 440  LIMIT 1; args=(440,)
DEBUG:django.db.backends:(0.000) INSERT INTO "modules_moduletranslation" ("id", "language_code", "parent_id", "name", "description") VALUES (440, en, 44, Sizes, Change size groups an item may take); args=(440, u'en', 44, u'Sizes', u'Change size groups an item may take')
DEBUG:django.db.backends:(0.000) SELECT (1) AS "a" FROM "modules_moduletranslation" WHERE "modules_moduletranslation"."id" = 441  LIMIT 1; args=(441,)
DEBUG:django.db.backends:(0.000) INSERT INTO "modules_moduletranslation" ("id", "language_code", "parent_id", "name", "description") VALUES (441, si, 44, Velikosti, Urejanje skupine velikosti artiklov); args=(441, u'si', 44, u'Velikosti', u'Urejanje skupine velikosti artiklov')
DEBUG:django.db.backends:(0.000) SELECT (1) AS "a" FROM "modules_module" WHERE "modules_module"."id" = 5  LIMIT 1; args=(5,)
DEBUG:django.db.backends:(0.000) INSERT INTO "modules_module" ("id", "path", "sort", "parent_id") VALUES (5, #, 60, None); args=(5, u'#', 60, None)
DEBUG:django.db.backends:(0.000) SELECT (1) AS "a" FROM "modules_moduletranslation" WHERE "modules_moduletranslation"."id" = 50  LIMIT 1; args=(50,)
DEBUG:django.db.backends:(0.000) INSERT INTO "modules_moduletranslation" ("id", "language_code", "parent_id", "name", "description") VALUES (50, en, 5, Reports, View and generate reports); args=(50, u'en', 5, u'Reports', u'View and generate reports')
DEBUG:django.db.backends:(0.000) SELECT (1) AS "a" FROM "modules_moduletranslation" WHERE "modules_moduletranslation"."id" = 51  LIMIT 1; args=(51,)
DEBUG:django.db.backends:(0.000) INSERT INTO "modules_moduletranslation" ("id", "language_code", "parent_id", "name", "description") VALUES (51, si, 5, Poročila, Pogled in urejanje poročil); args=(51, u'si', 5, u'Poro\u010dila', u'Pogled in urejanje poro\u010dil')
DEBUG:django.db.backends:(0.000) SELECT (1) AS "a" FROM "modules_module" WHERE "modules_module"."id" = 6  LIMIT 1; args=(6,)
DEBUG:django.db.backends:(0.000) INSERT INTO "modules_module" ("id", "path", "sort", "parent_id") VALUES (6, #, 10, None); args=(6, u'#', 10, None)
DEBUG:django.db.backends:(0.000) SELECT (1) AS "a" FROM "modules_moduletranslation" WHERE "modules_moduletranslation"."id" = 61  LIMIT 1; args=(61,)
DEBUG:django.db.backends:(0.000) INSERT INTO "modules_moduletranslation" ("id", "language_code", "parent_id", "name", "description") VALUES (61, en, 6, Sales, Process sales and returns); args=(61, u'en', 6, u'Sales', u'Process sales and returns')
DEBUG:django.db.backends:(0.000) SELECT (1) AS "a" FROM "modules_moduletranslation" WHERE "modules_moduletranslation"."id" = 62  LIMIT 1; args=(62,)
DEBUG:django.db.backends:(0.000) INSERT INTO "modules_moduletranslation" ("id", "language_code", "parent_id", "name", "description") VALUES (62, si, 6, Prodaja, Izdaja računov in dobropisov); args=(62, u'si', 6, u'Prodaja', u'Izdaja ra\u010dunov in dobropisov')
DEBUG:django.db.backends:(0.000) SELECT (1) AS "a" FROM "modules_module" WHERE "modules_module"."id" = 7  LIMIT 1; args=(7,)
DEBUG:django.db.backends:(0.000) INSERT INTO "modules_module" ("id", "path", "sort", "parent_id") VALUES (7, #, 20, None); args=(7, u'#', 20, None)
DEBUG:django.db.backends:(0.000) SELECT (1) AS "a" FROM "modules_moduletranslation" WHERE "modules_moduletranslation"."id" = 71  LIMIT 1; args=(71,)
DEBUG:django.db.backends:(0.000) INSERT INTO "modules_moduletranslation" ("id", "language_code", "parent_id", "name", "description") VALUES (71, en, 7, Stock, Item stock per warehouse); args=(71, u'en', 7, u'Stock', u'Item stock per warehouse')
DEBUG:django.db.backends:(0.000) SELECT (1) AS "a" FROM "modules_moduletranslation" WHERE "modules_moduletranslation"."id" = 72  LIMIT 1; args=(72,)
DEBUG:django.db.backends:(0.000) INSERT INTO "modules_moduletranslation" ("id", "language_code", "parent_id", "name", "description") VALUES (72, si, 7, Skladišče, Iskanje in urejanje zalogo artiklov); args=(72, u'si', 7, u'Skladi\u0161\u010de', u'Iskanje in urejanje zalogo artiklov')
DEBUG:django.db.backends:(0.000) SELECT (1) AS "a" FROM "companies_company" WHERE "companies_company"."id" = 1  LIMIT 1; args=(1,)
DEBUG:django.db.backends:(0.000) INSERT INTO "companies_company" ("id", "name", "address", "email", "identification") VALUES (1, Centro, inc., Cesta na hrib 123, info@centro.si, SI123456); args=(1, u'Centro, inc.', u'Cesta na hrib 123', u'info@centro.si', u'SI123456')
DEBUG:django.db.backends:(0.000) SELECT (1) AS "a" FROM "companies_company" WHERE "companies_company"."id" = 2  LIMIT 1; args=(2,)
DEBUG:django.db.backends:(0.000) INSERT INTO "companies_company" ("id", "name", "address", "email", "identification") VALUES (2, Another company, Titov trg 214, webmaster@the-company.com, 12 3456789 2); args=(2, u'Another company', u'Titov trg 214', u'webmaster@the-company.com', u'12 3456789 2')
DEBUG:django.db.backends:(0.001) SELECT "items_item"."id", "items_item"."name", "items_item"."description", "items_item"."cost_price", "items_item"."sale_price", "items_item"."barcode", "items_item"."category_id", "items_item"."size_group_id", "items_item"."size_id", "items_item"."tax_id" FROM "items_item" LIMIT 21; args=()
DEBUG:django.db.backends:(0.000) SELECT "items_item"."category_id" FROM "items_item" LIMIT 21; args=()
DEBUG:django.db.backends:(0.000) SELECT "items_item"."id", "items_item"."name", "items_item"."description", "items_item"."cost_price", "items_item"."sale_price", "items_item"."barcode", "items_item"."category_id", "items_item"."size_group_id", "items_item"."size_id", "items_item"."tax_id" FROM "items_item" LIMIT 21; args=()
DEBUG:django.db.backends:(0.000) SELECT "items_item"."category_id" FROM "items_item" LIMIT 21; args=()
DEBUG:root:Logging debug facility re-started ...
DEBUG:root:Logging debug facility re-started ...
